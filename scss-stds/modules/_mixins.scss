$em-base: 16px !default;
$size-value: 15px;
$scheme: 'light' !default;

$sans: 'Helvetica Neue', Helvetica, Arial, sans-serif;
$serif: Georgia, serif;
$script:Brush Script MT, Trebuchet MS, 'Helvetica Neue', Helvetica, Arial, script;
$monospace:'Bitstream Vera Sans Mono', Consolas, Monaco, Menlo, 'Andale Mono', monospace;

@mixin color-scheme($text_color:#3d3d3d,$scheme:$scheme){

	@if ($scheme == 'light') {
		color:$text_color;
	}
	@if ($scheme == 'dark') {
		color:#fff;
	}
}
@mixin std-hover($color:inherit) {
	@include single-transition(all, 0.2s, linear);
	&:hover{
		color:$color;
	}
}
@mixin hover($color:inherit) {
	&:hover{
		color:$color;
	}
}
@mixin std-no-hover {
	@include single-transition(all, 0s, linear);
}
@mixin alt-hover($color:$subColor) {
	@include hover($color);
}
@mixin no-list {
	margin-left:0px;
	padding-left:0px;
	list-style:none;
}
@mixin auto-img {
	width:100%;
	height:auto;
}
@mixin lifted-shadow($direction:both,$deg:5deg) {
	//@include box-shadow(0 1px 4px rgba(0, 0, 0, 0.3));
	position:relative;
	&:before, &:after {
		content:'';
		z-index:-2;
		position:absolute;
		bottom:12px;
		left:5px;
		width:40%;
		height:20%;
		@include box-shadow(0px 17px 8px #979797);
		@include transform(rotate(- $deg));
	}
	@if($direction == 'both') {
		&:after {
			right:10px;
			left:auto;
			@include transform(rotate($deg));
			visibility:visible!important;
			height:20%!important;
		}
	}
	@if($direction == 'left') {
		&:after {
			@include box-shadow(none);
			visibility:hidden;
		}
	}
	@if($direction == 'right') {
		&:before {
			@include box-shadow(none);
			visibility:visible;
		}
	}
}
@mixin left-shadow {
	@include box-shadow(-5px 8px 18px 8px #dbdcdd);
}
@mixin bevel($col: #4d4d4d) {
	@include text-shadow(0px 1px 0px $col);
}
@mixin emboss {
	@include text-shadow(-1px -1px 1px #fff, 1px 1px 1px #000);
}

@mixin custom-animation($content){
	-moz-animation: $content;
	-webkit-animation: $content;
	-o-animation: $content;
	-ms-animation: $content;
	-khtml-animation: $content;
	animation: $content;
}
@mixin keyframes($name) {
  @-moz-keyframes #{$name} { @content; }
  @-webkit-keyframes #{$name} { @content; }
  @-o-keyframes #{$name} { @content; }
  @-ms-keyframes #{$name} { @content; }
  @-khtml-keyframes #{$name} { @content; }
  @keyframes #{$name} { @content; }
}
/******* FOUNDATION ************/

@function emCalc($pxWidth) {
  @return $pxWidth / $em-base * 1em;
}

@function remCalc($pxWidth) {
  @return $pxWidth / $em-base * 1rem;
}

@function gridCalc($colNumber, $totalColumns) {
  @return percentage(($colNumber / $totalColumns));
}

@mixin side-radius($side, $radius) {
	@if $side == left {
		@include border-radius($radius 0 0 $radius);
	}
	@else if $side == right {
		@include border-radius(0 $radius $radius 0);
	}
	@else if $side == top {
		@include border-radius($radius $radius 0 0);
	}
	@else if $side == bottom {
		@include border-radius(0 0 $radius $radius);
	}
}
@mixin css-triangle($triangle-size, $triangle-color, $triangle-direction) {
  content: "";
  display: block;
  width: 0;
  height: 0;
  border: solid $triangle-size;
  @if ($triangle-direction == top) {
    border-color: $triangle-color transparent transparent transparent;
  }
  @if ($triangle-direction == bottom) {
    border-color: transparent transparent $triangle-color transparent;
  }
  @if ($triangle-direction == left) {
    border-color: transparent transparent transparent $triangle-color;
  }
  @if ($triangle-direction == right) {
    border-color: transparent $triangle-color transparent transparent;
  }
}
@mixin better-triangle($direction:top,$color:$domColor,$size:30px){
	position: relative;
	background: $color;
	&:after {
		border: solid transparent;
		content: " ";
		height: 0;
		width: 0;
		position: absolute;
		pointer-events: none;
		border-color: rgba(250, 250, 250, 0);
		border-width: $size;
		@if ($direction == top){
			bottom: 100%;
			left: 50%;
			margin-left: $size;
			border-bottom-color: $color;
		}
		@if ($direction == bottom){
			top: 100%;
			left: 50%;
			margin-left: -$size;
			border-top-color: $color;
		}
	}
}
@mixin clearfix() {
  *zoom:1;
  &:before, &:after { content: " "; display: table; }
  &:after { clear: both; }
}
