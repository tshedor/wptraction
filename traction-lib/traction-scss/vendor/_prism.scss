/**
 * prism.js Coy theme for JavaScript, CoffeeScript, CSS and HTML
 * Based on https://github.com/tshedor/workshop-wp-theme (Example: http://workshop.kansan.com/category/sessions/basics or http://workshop.timshedor.com/category/sessions/basics);
 * @author Tim  Shedor
 */

code[class*="language-"], pre[class*="language-"] {
	color:black;
	font-family:$monospace;
	direction:ltr;
	text-align:left;
	@include force-wrap;
	word-spacing:normal;
	@include tab-size(4);
	@include hyphens(none);
}

pre[class*="language-"] {
	position: relative;
	padding: 1em;
	margin: .5em 0;
	@include box-shadow(-1px 0px 0px 0px #358ccb, 0px 0px 0px 1px #dfdfdf);
	border-left: 10px solid #358ccb;
	background-color: #fdfdfd;
	background-size: 3em 3em;
	background-origin: content-box;
	overflow: visible;
	max-height: 30em;
}

// Code blocks
code[class*="language"] {
	max-height: 29em;
	display: block;
	overflow: scroll;
}

//Margin bottom to accomodate shadow
:not(pre) > code[class*="language-"], pre[class*="language-"] {
	background-color: #fdfdfd;
	@include box-sizing(border-box);
	margin-bottom: 1em;
}

//Inline code
:not(pre) > code[class*="language-"] {
	position: relative;
	padding: .2em;
	@include border-radius(0.3em);
	color: #c92c2c;
	border: 1px solid rgba(0, 0, 0, 0.1);
}

pre[class*="language-"] {
	&:before, &:after {
		content: '';
		z-index: -2;
		display: block;
		position: absolute;
		bottom: 0.75em;
		left: 0.18em;
		width: 40%;
		height: 20%;
		@include box-shadow(0 13px 8px #979797);
		@include transform(rotate(-2deg));
	}
}

:not(pre) > code[class*="language-"]:after, pre[class*="language-"]:after {
	right: 0.75em;
	left: auto;
	@include transform(rotate(2deg));
}

.token {
	&.comment, &.block-comment, &.prolog, &.doctype, &.cdata {
		color:$prism-comment;
	}
	&.punctuation {
		color: $prism-punctuation;
	}
	&.property, &.tag, &.boolean, &.number, &.function-name, &.constant, &.symbol {
		color: $prism-property;
	}
	&.selector, &.attr-name, &.string, &.function, &.builtin {
		color: $prism-selector;
	}
	&.operator, &.entity, &.url, &.variable {
		color: $prism-string;
		background: rgba(white, 0.5);
	}
	&.atrule, &.attr-value, &.keyword, &.class-name {
		color: $prism-attr-value;
	}
	&.regex, &.important {
		color: $prism-important;
	}
}

.language-css .token.string, .style .token.string {
	color: $prism-string;
	background: rgba(white, 0.5);
}

.token {
	&.important {
		font-weight: normal;
	}
	&.entity {
		cursor: help;
	}
}

.namespace {
	@include opacity(0.7);
}

@media screen and (max-width: 767px) {
	pre[class*="language-"] {
		&:before, &:after {
			bottom: 14px;
			@include box-shadow(none);
		}
	}
}

//Plugin styles

.token {
	&.tab:not(:empty):before, &.cr:before, &.lf:before {
		color: #e0d7d1;
	}
}

@if $prism-prism-line-highlight == true {
	.line-highlight {
		position: absolute;
		left: 0;
		right: 0;
		padding: inherit 0;
		margin-top: 1em;
		background-color:darken($prism-prism-background,4%);
		pointer-events: none;
		line-height: inherit;
		white-space: pre;
		&:before {
			@include border-radius(999px);
			@include box-shadow(0 1px white);
			content: attr(data-start);
			position: absolute;
			top: .4em;
			left: .6em;
			min-width: 1em;
			padding: 0 .5em;
			background-color: rgba(darken($prism-prism-background, 8%), 0.4);
			color:white;
			font: bold 65% / 1.5 sans-serif;
			text-align: center;
			vertical-align: .3em;
			text-shadow: none;
		}
		&[data-end]:after {
			@include border-radius(999px);
			@include box-shadow(0 1px white);
			content: attr(data-start);
			position: absolute;
			top: .4em;
			left: .6em;
			min-width: 1em;
			padding: 0 .5em;
			background-color: rgba(darken($prism-prism-background, 8%), 0.4);
			color:white;
			font: bold 65% / 1.5 sans-serif;
			text-align: center;
			vertical-align: .3em;
			text-shadow: none;
			content: attr(data-end);
			top: auto;
			bottom: .4em;
		}
	}
}

@if $prism-prism-show-invisibles == true {
	.token {
		&.tab:not(:empty):before, &.cr:before, &.lf:before {
			color: hsl(24, 20%, 85%);
		}
		&.tab:not(:empty):before {
			content: '▸';
		}
		&.cr:before {
			content: '␍';
		}
		&.lf:before {
			content: '␊';
		}
		a {
			color: inherit;
		}
	}
}

.example-row {
	background:white;
	margin-left:0px!important;
	margin-right:0px!important;
}
.full-code-row {
	margin-left:0px!important;
	margin-right:0px!important;
}